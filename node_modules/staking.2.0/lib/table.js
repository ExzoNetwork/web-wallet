"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _Table = _interopRequireDefault(require("@mui/material/Table"));

var _TableBody = _interopRequireDefault(require("@mui/material/TableBody"));

var _TableCell = _interopRequireDefault(require("@mui/material/TableCell"));

var _TableContainer = _interopRequireDefault(require("@mui/material/TableContainer"));

var _TableHead = _interopRequireDefault(require("@mui/material/TableHead"));

var _TableRow = _interopRequireDefault(require("@mui/material/TableRow"));

var _Paper = _interopRequireDefault(require("@mui/material/Paper"));

var _reactSectionList = _interopRequireDefault(require("./reactSectionList"));

var _excluded = ["children"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var styleHead = {
  color: '#fff',
  backgroundColor: '#04051b',
  borderWidth: 0,
  fontSize: 12,
  height: 35
};

var TableValidators = function TableValidators(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(_TableContainer.default, {
    component: _Paper.default,
    style: {
      height: props.staked ? 200 : props.search ? 540 : 280,
      backgroundColor: '#1d224e'
    }
  }, /*#__PURE__*/React.createElement(_Table.default, {
    size: 'small',
    stickyHeader: true,
    "aria-label": "sticky table",
    sx: {
      minWidth: 650,
      backgroundColor: '#1f2853'
    }
  }, /*#__PURE__*/React.createElement(_TableHead.default, null, /*#__PURE__*/React.createElement(_TableRow.default, {
    hover: true
  }, /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "left",
    style: _objectSpread(_objectSpread({}, styleHead), {}, {
      width: 0
    }),
    className: "style-head"
  }), /*#__PURE__*/React.createElement(_TableCell.default, {
    style: styleHead,
    className: "style-head"
  }, "Account"), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleHead,
    className: "style-head"
  }, "Commission,%"), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleHead,
    className: "style-head"
  }, props.staked ? 'My Stake (VLX)' : 'Total Staked (VLX)'), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleHead,
    className: "style-head"
  }, "Apr,%"), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleHead,
    className: "style-head"
  }, "Stakers"), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "left",
    style: styleHead,
    className: "style-head"
  }, "Status"))), /*#__PURE__*/React.createElement(_TableBody.default, null, children)));
};

var _default = TableValidators;
exports.default = _default;
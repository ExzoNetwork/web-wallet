"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactJdenticon = _interopRequireDefault(require("react-jdenticon"));

var _badge = _interopRequireDefault(require("./badge"));

var _bn = _interopRequireDefault(require("bn.js"));

var _formatValue = require("./format-value");

var _TableCell = _interopRequireDefault(require("@mui/material/TableCell"));

var _TableRow = _interopRequireDefault(require("@mui/material/TableRow"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Item = function Item(props) {
  var address = props.address;
  var addressCut = address.substring(0, 15) + '...' + address.substring(25);
  var styleRow = {
    color: "#fff",
    borderColor: props.staked ? "#04051b" : "#151839",
    cursor: "pointer",
    fontSize: 12,
    backgroundColor: props.staked ? '#1F2853' : '#080e35'
  };
  return /*#__PURE__*/React.createElement(_TableRow.default, {
    key: props.address,
    sx: {
      '&:last-child td, &:last-child th': {
        border: 0
      }
    },
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(_TableCell.default, {
    style: styleRow,
    className: "style-row"
  }, /*#__PURE__*/React.createElement(_reactJdenticon.default, {
    size: "40",
    value: props.address
  })), /*#__PURE__*/React.createElement(_TableCell.default, {
    component: "th",
    scope: "item",
    style: styleRow,
    className: "style-row"
  }, addressCut, /*#__PURE__*/React.createElement("div", {
    style: {
      color: 'rgba(255, 255, 255, 0.3)'
    }
  }, props.name)), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleRow,
    className: "style-row"
  }, props.commission), props.myStake && /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: _objectSpread(_objectSpread({}, styleRow), {}, {
      color: props.staked && '#0BFFB7'
    }),
    className: "style-row"
  }, (0, _formatValue.formatStakeAmount)(props.myStake)), props.totalStaked && /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleRow,
    className: "style-row"
  }, (0, _formatValue.formatStakeAmount)(props.totalStaked)), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleRow,
    className: "style-row"
  }, null !== props.apr && (props.apr * 100).toFixed(2)), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleRow,
    className: "style-row"
  }, props.totalStakers), /*#__PURE__*/React.createElement(_TableCell.default, {
    align: "right",
    style: styleRow,
    className: "style-row"
  }, /*#__PURE__*/React.createElement(_badge.default, {
    status: props.status
  })));
};

var _default = Item;
exports.default = _default;
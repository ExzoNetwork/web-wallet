"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _noticeIcon = _interopRequireDefault(require("./images/notice-icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Notice = function Notice(props) {
  var container = {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: props.mt
  };
  var title = {
    fontSize: 16,
    flex: 0.85,
    textAlign: 'left'
  };
  var icon = {
    flex: 0.1
  };
  return /*#__PURE__*/React.createElement("div", {
    style: container,
    className: "notice-container"
  }, /*#__PURE__*/React.createElement("div", {
    style: icon,
    className: "notice-icon"
  }, /*#__PURE__*/React.createElement(_noticeIcon.default, {
    width: "34",
    height: "35"
  })), /*#__PURE__*/React.createElement("div", {
    style: title,
    className: "notice-title"
  }, props.text));
};

var _default = Notice;
exports.default = _default;
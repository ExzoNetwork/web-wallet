"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _Tabs = _interopRequireDefault(require("@mui/material/Tabs"));

var _Tab = _interopRequireDefault(require("@mui/material/Tab"));

var _Box = _interopRequireDefault(require("@mui/material/Box"));

var _buttonBlock = _interopRequireDefault(require("./buttonBlock"));

var _flatlistReact = _interopRequireDefault(require("flatlist-react"));

var _Info = _interopRequireDefault(require("@mui/icons-material/Info"));

var _IconButton = _interopRequireDefault(require("@mui/material/IconButton"));

var _Tooltip = _interopRequireDefault(require("@mui/material/Tooltip"));

var _formatValue = require("./format-value");

var _mobxReact = require("mobx-react");

var _dominanceIcon = _interopRequireDefault(require("./images/dominance-icon"));

var _percentIcon = _interopRequireDefault(require("./images/percent-icon"));

var _plusIcon = _interopRequireDefault(require("./images/plus-icon"));

var _stakeIcon = _interopRequireDefault(require("./images/stake-icon"));

var _withdrawalIcon = _interopRequireDefault(require("./images/withdrawal-icon"));

var _velasBlue = _interopRequireDefault(require("./images/velas-blue"));

var _excluded = ["children", "value", "index"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function TabPanel(props) {
  var children = props.children,
      value = props.value,
      index = props.index,
      other = _objectWithoutProperties(props, _excluded);

  return /*#__PURE__*/React.createElement("div", _extends({
    role: "tabpanel",
    hidden: value !== index
  }, other), value === index && /*#__PURE__*/React.createElement("div", {
    style: {
      marginBlock: 10
    }
  }, children));
}

var Rectangle = function Rectangle(props) {
  var mb = {
    marginBlock: 5,
    minHeight: 10,
    fontSize: 12,
    textTransform: 'uppercase'
  };
  var link_active_stake = 'https://support.velas.com/hc/en-150/articles/360021044820-Delegation-Warmup-and-Cooldown';

  var Info = function Info(props) {
    return /*#__PURE__*/React.createElement(_Tooltip.default, {
      title: /*#__PURE__*/React.createElement("div", null, props.titleInfo, " ", props.link && /*#__PURE__*/React.createElement("a", {
        href: link_active_stake,
        target: "_blank",
        style: {
          color: '#0BFFB7',
          cursor: 'pointer',
          textDecoration: 'underline'
        }
      }, "Read More.")),
      style: {
        position: 'absolute',
        top: 5,
        right: 5
      }
    }, /*#__PURE__*/React.createElement(_IconButton.default, null, /*#__PURE__*/React.createElement(_Info.default, {
      color: "inherit",
      style: {
        color: "#FFF",
        fontSize: 10
      }
    })));
  };

  return /*#__PURE__*/React.createElement("div", {
    style: props.style
  }, props.titleInfo && /*#__PURE__*/React.createElement(Info, props), /*#__PURE__*/React.createElement("div", {
    style: mb
  }, props.row1), /*#__PURE__*/React.createElement("div", {
    style: mb
  }, props.row2), /*#__PURE__*/React.createElement("div", {
    style: _objectSpread(_objectSpread({}, mb), {}, {
      fontSize: 10,
      color: '#ffffff80'
    })
  }, props.row3));
};

var leftRectangle = {
  backgroundColor: '#1a1f4f',
  width: 190,
  marginRight: 5,
  textAlign: 'center',
  padding: 10,
  position: "relative"
};
var rightRectangle = {
  backgroundColor: '#1a1f4f',
  width: 190,
  marginLeft: 5,
  textAlign: 'center',
  padding: 10,
  position: "relative"
};
var rowStyle = {
  display: 'flex',
  justifyContent: 'space-between',
  alignItems: 'center'
};
/**
  * First validator details screen
  */

function BlockStake(props) {
  var validatorDetails = props.validatorDetails,
      stakingStore = props.stakingStore;
  if (!validatorDetails) return null;
  var myStake = validatorDetails.myStake,
      availableWithdrawRequested = validatorDetails.availableWithdrawRequested,
      myActiveStake = validatorDetails.myActiveStake,
      annualPercentageRate = validatorDetails.annualPercentageRate,
      dominance = validatorDetails.dominance,
      quality = validatorDetails.quality,
      totalAvailableForWithdrawRequestStake = validatorDetails.totalAvailableForWithdrawRequestStake;
  var ownActiveStake = myActiveStake || '...';
  var activateButtons = validatorDetails.stakeDataIsLoaded;
  var buttonsStyle = activateButtons ? styles.styleBtnGreen : styles.styleBtnDisabled;
  var requestBtnStyle = activateButtons ? styles.styleBtnRed : styles.styleBtnRequestDisabled;
  var isStakedValidator = !myStake.isZero();
  var activeStake = validatorDetails ? validatorDetails.activeStake : '0';
  return /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      justifyContent: 'center',
      flexDirection: 'column'
    }
  }, isStakedValidator ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: rowStyle
  }, /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_stakeIcon.default, {
      width: "20px",
      height: "14px"
    }),
    row2: (0, _formatValue.formatStakeAmount)(activeStake) + " VLX",
    row3: "Total stake",
    style: leftRectangle,
    titleInfo: 'Total stake of validator.'
  }), /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_percentIcon.default, {
      width: "20px",
      height: "14px"
    }),
    row2: annualPercentageRate,
    row3: "ANNUAL PERCENTAGE RATE",
    style: rightRectangle,
    titleInfo: 'APR is calculated based on the results of the previous epoch'
  })), /*#__PURE__*/React.createElement("div", {
    style: _objectSpread(_objectSpread({}, rowStyle), {}, {
      marginTop: 20,
      display: 'flex'
    })
  }, /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_dominanceIcon.default, {
      width: "20px",
      height: "14px"
    }),
    row2: dominance.toFixed(4),
    row3: "Dominance",
    style: leftRectangle,
    titleInfo: 'Relative validator weight compared to the average. Lower is better'
  }), /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_plusIcon.default, {
      width: "20px",
      height: "14px"
    }),
    row2: quality,
    row3: "Validator Interest",
    style: rightRectangle,
    titleInfo: '0 means average'
  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: _objectSpread(_objectSpread({}, rowStyle), {}, {
      marginTop: 20,
      display: 'flex'
    }),
    className: "containers"
  }, /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_dominanceIcon.default, {
      width: "20px",
      height: "14px"
    }),
    row2: dominance.toFixed(4),
    row3: "Dominance",
    style: leftRectangle,
    titleInfo: 'Relative validator weight compared to the average. Lower is better'
  }), /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_plusIcon.default, {
      width: "20px",
      height: "14px"
    }),
    row2: quality,
    row3: "Validator Interest",
    style: rightRectangle,
    titleInfo: '0 means average'
  }))), /*#__PURE__*/React.createElement("div", {
    style: {
      textAlign: 'center'
    },
    className: "button-block-style"
  }, myActiveStake ? /*#__PURE__*/React.createElement("button", {
    onClick: props.onClickStakeMore,
    style: buttonsStyle,
    className: "button-block-style-btn-green"
  }, "Stake More") : /*#__PURE__*/React.createElement("button", {
    onClick: props.onClickStake,
    style: buttonsStyle,
    className: "button-block-style-btn-green"
  }, "Stake"), myActiveStake && totalAvailableForWithdrawRequestStake && totalAvailableForWithdrawRequestStake.gte(stakingStore.rent) && /*#__PURE__*/React.createElement("button", {
    onClick: props.onClickRequest,
    style: styles.styleBtnRed,
    className: "button-block-style-btn-red"
  }, "REQUEST WITHDRAW")));
}

var styles = {
  styleBtnDisabled: {
    background: '#0BFFB7',
    padding: 12,
    width: 180,
    cursor: 'pointer',
    border: 'none',
    textTransform: "uppercase",
    marginBlock: 20,
    marginInline: 10,
    fontSize: 12,
    opacity: 0.2
  },
  styleBtnGreen: {
    background: '#0BFFB7',
    padding: 12,
    width: 180,
    cursor: 'pointer',
    border: 'none',
    textTransform: "uppercase",
    marginBlock: 20,
    marginInline: 10,
    fontSize: 12
  },
  styleBtnRequestDisabled: {
    background: '#FB5252',
    padding: 12,
    width: 180,
    cursor: 'pointer',
    border: 'none',
    textTransform: "uppercase",
    marginBlock: 20,
    marginInline: 10,
    color: "#fff",
    fontSize: 12,
    opacity: 0.2
  },
  styleBtnRed: {
    background: '#FB5252',
    padding: 12,
    width: 180,
    cursor: 'pointer',
    border: 'none',
    textTransform: "uppercase",
    marginBlock: 20,
    marginInline: 10,
    color: "#fff",
    fontSize: 12
  }
};

function BlockWithdrawals(props) {
  var validatorDetails = props.validatorDetails;
  var totalWithdrawRequested = validatorDetails.totalWithdrawRequested,
      availableWithdrawRequested = validatorDetails.availableWithdrawRequested;
  var totalWithdRequested = totalWithdrawRequested ? totalWithdrawRequested && totalWithdrawRequested.isZero() ? '0' : (0, _formatValue.formatStakeAmount)(totalWithdrawRequested) : '...';
  var totalWithdrawRequestedSign = totalWithdrawRequested ? totalWithdrawRequested.isZero() ? '' : '' : '';
  return /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      justifyContent: 'center',
      flexDirection: 'column'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      justifyContent: 'space-between',
      alignItems: 'center'
    }
  }, /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_velasBlue.default, {
      width: "23px",
      height: "19px"
    }),
    row2: totalWithdRequested,
    row3: "TOTAL WITHDRAW REQUESTED",
    style: leftRectangle,
    titleInfo: ''
  }), /*#__PURE__*/React.createElement(Rectangle, {
    row1: /*#__PURE__*/React.createElement(_velasBlue.default, {
      width: "23px",
      height: "19px"
    }),
    row2: (0, _formatValue.formatStakeAmount)(availableWithdrawRequested),
    row3: "AVAILABLE FOR WITHDRAW",
    style: rightRectangle,
    titleInfo: ''
  })), !availableWithdrawRequested || availableWithdrawRequested.isZero() ? null : /*#__PURE__*/React.createElement(_buttonBlock.default, {
    onClickWithdrawal: props.onClickWithdrawal
  }));
}

function Rewards(props) {
  var stakingStore = props.stakingStore;
  var tableRow = {
    flexDirection: 'row',
    height: 40,
    alignItems: 'center',
    display: 'flex'
  };
  var columnRowTxt = {
    width: '33.3%',
    textAlign: 'center',
    color: '#fff',
    borderWidth: 2,
    borderColor: '#151839',
    borderStyle: 'solid',
    padding: 7,
    fontSize: 12
  };
  var tabRowTxt = {
    width: '33.3%',
    textAlign: 'center',
    color: '#ffffff20',
    fontSize: 12
  };
  var styleFlatList = {
    overflowY: 'scroll',
    height: 240
  };

  var renderitem = function renderitem(item, idx) {
    var amount = item.amount ? (0, _formatValue.formatReward)(item.amount) : '...';
    var apr = item.apr ? (item.apr * 100).toFixed(2) : '...';
    return /*#__PURE__*/React.createElement("div", {
      key: item.epoch,
      style: tableRow,
      className: "tabs-container-tablerow"
    }, /*#__PURE__*/React.createElement("div", {
      style: _objectSpread(_objectSpread({}, columnRowTxt), {}, {
        backgroundColor: idx % 2 == 1 ? '#252847' : '#161A3F'
      }),
      className: "tabs-container-columnrowtxt"
    }, !item.epoch ? '...' : item.epoch), /*#__PURE__*/React.createElement("div", {
      style: _objectSpread(_objectSpread({}, columnRowTxt), {}, {
        backgroundColor: idx % 2 == 1 ? '#252847' : '#161A3F'
      }),
      className: "tabs-container-columnrowtxt"
    }, amount), /*#__PURE__*/React.createElement("div", {
      style: _objectSpread(_objectSpread({}, columnRowTxt), {}, {
        backgroundColor: idx % 2 == 1 ? '#252847' : '#161A3F'
      }),
      className: "tabs-container-columnrowtxt"
    }, apr));
  };

  var link_reward = 'https://support.velas.com/hc/en-150/articles/360014994819-F-A-Q'; //change a link

  var EmptyList = function EmptyList() {
    var styleEmpty = {
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
      marginBlock: 80
    };
    return /*#__PURE__*/React.createElement("div", {
      style: styleEmpty,
      className: "tabs-container-style-empty"
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        marginBlock: 10,
        fontSize: 12
      },
      className: "tabs-container-empty-title"
    }, "We did not find any reward records for this validator."), /*#__PURE__*/React.createElement("div", {
      style: {
        fontSize: 12
      }
    }, "Read about how rewards are", ' ', /*#__PURE__*/React.createElement("a", {
      href: link_reward,
      target: "_blank",
      style: {
        color: '#0BFFB7',
        cursor: 'pointer',
        textDecoration: 'underline'
      },
      className: "tabs-container-empty-link"
    }, "getting credited.")));
  };

  return /*#__PURE__*/React.createElement(_mobxReact.Observer, null, function () {
    setTimeout(function () {
      stakingStore.loadMoreRewards();
    }, 0);
    var rewards = stakingStore.getRewards();
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
      style: _objectSpread(_objectSpread({}, tableRow), {}, {
        height: 25,
        alignItems: 'flex-start'
      }),
      className: "tabs-container-tablerow"
    }, /*#__PURE__*/React.createElement("div", {
      style: tabRowTxt,
      className: "tabs-container-tab-row-txt"
    }, "#Epoch"), /*#__PURE__*/React.createElement("div", {
      style: tabRowTxt,
      className: "tabs-container-tab-row-txt"
    }, "Reward"), /*#__PURE__*/React.createElement("div", {
      style: tabRowTxt,
      className: "tabs-container-tab-row-txt"
    }, "APR")), /*#__PURE__*/React.createElement("div", {
      style: styleFlatList,
      className: "tabs-container-style-flat-list"
    }, /*#__PURE__*/React.createElement(_flatlistReact.default, {
      list: rewards.rewards,
      renderItem: renderitem,
      renderWhenEmpty: function renderWhenEmpty() {
        return /*#__PURE__*/React.createElement(EmptyList, null);
      }
    })));
  });
}

var TabsContainer = function TabsContainer(props) {
  var _React$useState = React.useState(0),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      value = _React$useState2[0],
      setValue = _React$useState2[1];

  if (!props.validatorDetails) return null;
  var myStake = props.validatorDetails.myStake;

  var handleChange = function handleChange(event, newValue) {
    setValue(newValue);
  };

  var BORDER_COLOR = 'rgba(255, 255, 255, 0.18)';
  return /*#__PURE__*/React.createElement(_Box.default, {
    sx: {
      width: '100%'
    }
  }, !myStake.isZero() && /*#__PURE__*/React.createElement(_Box.default, {
    sx: {
      borderBottom: 1,
      borderColor: BORDER_COLOR
    }
  }, /*#__PURE__*/React.createElement(_Tabs.default, {
    value: value,
    onChange: handleChange,
    TabIndicatorProps: {
      style: {
        background: '#0BFFB7'
      }
    },
    variant: "fullWidth",
    centered: true,
    textColor: 'inherit'
  }, /*#__PURE__*/React.createElement(_Tab.default, {
    label: "Stake",
    style: {
      color: value === 0 ? '#0BFFB7' : '#ffffff20',
      fontSize: 13
    },
    className: "tabs-container-tab"
  }), /*#__PURE__*/React.createElement(_Tab.default, {
    label: "Withdrawals",
    style: {
      color: value === 1 ? '#0BFFB7' : '#ffffff20',
      fontSize: 13
    },
    className: "tabs-container-tab"
  }), /*#__PURE__*/React.createElement(_Tab.default, {
    label: "Rewards",
    style: {
      color: value === 2 ? '#0BFFB7' : '#ffffff20',
      fontSize: 13
    },
    className: "tabs-container-tab"
  }))), !myStake.isZero() ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TabPanel, {
    value: value,
    index: 0
  }, /*#__PURE__*/React.createElement(BlockStake, props)), /*#__PURE__*/React.createElement(TabPanel, {
    value: value,
    index: 1
  }, /*#__PURE__*/React.createElement(BlockWithdrawals, props)), /*#__PURE__*/React.createElement(TabPanel, {
    value: value,
    index: 2
  }, /*#__PURE__*/React.createElement(Rewards, {
    stakingStore: props.stakingStore
  }))) : /*#__PURE__*/React.createElement(TabPanel, {
    value: value,
    index: 0
  }, /*#__PURE__*/React.createElement(BlockStake, props)));
};

var _default = TabsContainer;
exports.default = _default;